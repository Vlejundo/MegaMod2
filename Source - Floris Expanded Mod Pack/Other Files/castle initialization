

			
	  	(store_script_param_1, ":center_no"),
      	(store_script_param_2, ":faction"),
      	(store_script_param, ":town_lord", 3),

      	(assign, ":end_cond", trp_castle_1_seneschal),
      	(try_for_range, ":cur_object_no", trp_town_1_seneschal, ":end_cond"),
       		(party_slot_eq, ":cur_object_no", slot_trp_is_active, 0),   
        	(party_set_slot, ":center_no", slot_town_seneschal, ":cur_object_no"),
        	(troop_set_slot, ":cur_object_no", slot_trp_is_active, 1),
        	(assign, ":end_cond", ":cur_object_no"),        #break   
      	(try_end),

        (store_random_in_range, ":castle_no", "p_castle_1", "p_village_1"),
        (store_sub, ":offset", ":castle_no", "p_castle_1"),
        (assign, ":offset_orig", ":offset"),
        (val_mul, ":offset", 3),    #F&B Check no idea, why this mul by 3 is used.
        (store_add, ":exterior_scene_no", "scn_castle_1_exterior", ":offset"),
        (party_set_slot,":center_no", slot_castle_exterior, ":exterior_scene_no"),
        (store_add, ":interior_scene_no", "scn_castle_1_interior", ":offset"),
        (party_set_slot,":center_no", slot_town_castle, ":interior_scene_no"),
        (store_add, ":interior_scene_no", "scn_castle_1_prison", ":offset"),
        (party_set_slot,":center_no", slot_town_prison, ":interior_scene_no"),
        (party_set_slot,":center_no", slot_town_reinforcement_party_template, "pt_center_reinforcements"),
        (store_random_in_range, ":rand_castle_icon", "icon_castle_derchios", "icon_castle_weyyah"),
        (party_set_icon, ":center_no", ":rand_castle_icon"), 
               # Check, whether castle needs to be sieged with belfry
        (try_begin),
             (this_or_next|eq, ":offset_orig", 0),
             (this_or_next|eq, ":offset_orig", 1),
             (this_or_next|eq, ":offset_orig", 3),
             (this_or_next|eq, ":offset_orig", 6),
             (this_or_next|eq, ":offset_orig", 7),
             (this_or_next|eq, ":offset_orig", 8),
             (this_or_next|eq, ":offset_orig", 10),
             (this_or_next|eq, ":offset_orig", 12),
             (this_or_next|eq, ":offset_orig", 20),
             (this_or_next|eq, ":offset_orig", 24),
             (this_or_next|eq, ":offset_orig", 33),
             (this_or_next|eq, ":offset_orig", 34),
             (this_or_next|eq, ":offset_orig", 37),
             (this_or_next|eq, ":offset_orig", 39),
             (this_or_next|eq, ":offset_orig", 40),
             (this_or_next|eq, ":offset_orig", 41),
             (eq, ":offset_orig", 42),
             (party_set_slot, ":center_no", slot_center_siege_with_belfry, 1),   
        (try_end),
        (party_set_slot, ":center_no", slot_center_last_spotted_enemy, -1),
        (party_set_slot, ":center_no", slot_center_is_besieged_by, -1),
        (party_set_slot, ":center_no", slot_center_last_taken_by_troop, -1),
        ##diplomacy start+ Set the home slots for town merchants, elders, etc. for reverse-lookup
        (try_for_range, ":offset", dplmc_slot_town_merchants_begin, dplmc_slot_town_merchants_end),
           (party_get_slot, ":npc", ":center_no", ":offset"),
           (gt, ":npc", 0),
           (neg|troop_slot_ge, ":npc", slot_troop_home, 1),#If the startup script wasn't altered by another mod, we don't have to worry about this condition.
           (troop_set_slot, ":npc", slot_troop_home, ":center_no"),
        (try_end),
        ##diplomacy end+
        (add_party_note_tableau_mesh, ":center_no", "tableau_center_note_mesh"),
        (call_script, "script_give_center_to_faction_aux", ":center_no", ":faction"),
        (call_script, "script_start_give_center_to_lord", ":center_no", ":town_lord", 0),
        #set original factions
        (store_faction_of_party, ":original_faction", ":center_no"),
        (faction_get_slot, ":culture", ":original_faction", slot_faction_culture),
        (party_set_slot, ":center_no", slot_center_culture,  ":culture"),
        (party_set_slot, ":center_no", slot_center_original_faction,  ":original_faction"),
        (party_set_slot, ":center_no", slot_center_ex_faction,  ":original_faction"),
        (try_begin),
			 (eq, ":town_lord", "trp_player"),
			 #Use trp_kingdom_heroes_including_player_begin instead of trp_player as a workaround for
			 #old saved games (since uninitialized memory is 0).
			 (party_set_slot, ":center_no", dplmc_slot_center_ex_lord, "trp_kingdom_heroes_including_player_begin"),
			 (troop_slot_eq, "trp_player", slot_troop_home, ":center_no"),
			 (neg|party_slot_ge, ":center_no", dplmc_slot_center_original_lord, 1),
			 (party_set_slot, ":center_no", dplmc_slot_center_original_lord, "trp_kingdom_heroes_including_player_begin"),
		  (else_try),
			 (party_set_slot, ":center_no", dplmc_slot_center_ex_lord, ":town_lord"),
			 (ge, ":town_lord", 0),
			 (troop_slot_eq, ":town_lord", slot_troop_home, ":center_no"),
			 (neg|party_slot_ge, ":center_no", dplmc_slot_center_original_lord, 1),
			 (party_set_slot, ":center_no", dplmc_slot_center_original_lord, ":town_lord"),
		(try_end),
		(assign, ":initial_wealth", 1000),
		(party_set_slot, ":center_no", slot_town_wealth, ":initial_wealth"),
		(assign, ":garrison_strength", 15),
        (try_for_range, ":unused", 0, ":garrison_strength"),
          (call_script, "script_cf_reinforce_party", ":center_no"),
        (try_end),
        (party_set_slot, ":center_no", slot_town_player_odds, 1000),
        (store_random_in_range, ":troop_no", castle_specialist_begin, castle_specialist_end),
		(party_set_slot, ":center_no", slot_center_specialist_type, ":troop_no"),
		(store_random_in_range, ":amount", 1, 3),
		(party_set_slot, ":center_no", slot_center_specialist_amount, ":amount"),
################ game_script in order:

   
	  
	
      
    
      
      
      
      
	  
	  
	  
	  
      (call_script, "script_update_village_market_towns"),
	  
      
	  
	  #This needs to be after market towns
	  (call_script, "script_initialize_economic_information"),

	  
	
	 
      ##diplomacy end+
	  
      (call_script, "script_update_town_specialists"),	#Floris STAT
      (call_script, "script_update_companion_candidates_in_taverns"),
      (call_script, "script_update_ransom_brokers"),
      (call_script, "script_update_tavern_travellers"),
      (call_script, "script_update_tavern_minstrels"),
      (call_script, "script_update_booksellers"),
	  #Duh Town Population for Land required // Linked to bank system
	  
	  